version: "3.9"

services:
  postgres:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-aksara}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-aksara}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  minio:
    image: quay.io/minio/minio:latest
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  minio-init:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_started
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_BUCKET_DOCUMENTS: ${MINIO_BUCKET_DOCUMENTS:-documents}
    entrypoint: >-
      /bin/sh -c "
      until mc alias set local http://minio:9000 ${MINIO_ROOT_USER:-minioadmin} ${MINIO_ROOT_PASSWORD:-minioadmin}; do sleep 2; done && \
      mc mb --ignore-existing local/${MINIO_BUCKET_DOCUMENTS:-documents} && \
      mc anonymous set private local/${MINIO_BUCKET_DOCUMENTS:-documents}
      "
    restart: "no"

  backend:
    build: ./backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: ${BACKEND_DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/aksara}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT:-http://minio:9000}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_BUCKET_DOCUMENTS: ${MINIO_BUCKET_DOCUMENTS:-documents}
      MINIO_PRESIGNED_TTL: ${MINIO_PRESIGNED_TTL:-3600}
      MINIO_PUBLIC_ENDPOINT: ${MINIO_PUBLIC_ENDPOINT:-http://localhost:9000}
      AI_SERVICE_BASE_URL: ${AI_SERVICE_BASE_URL:-http://ai-service:7700}
      AI_SERVICE_TOKEN: ${AI_SERVICE_TOKEN:-}
      AI_SERVICE_TIMEOUT_MS: ${AI_SERVICE_TIMEOUT_MS:-15000}
    ports:
      - "7600:3000"

  ai-service:
    build: ./ai-service
    command: uvicorn app.main:app --host 0.0.0.0 --port 7700 --reload
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      minio-init:
        condition: service_completed_successfully
    volumes:
      - ./ai-service:/app
    environment:
      APP_ENV: ${APP_ENV:-local}
      PORT: 7700
      LOG_LEVEL: ${AI_LOG_LEVEL:-DEBUG}
      DATABASE_URL: ${AI_DATABASE_URL:-postgresql+psycopg://postgres:postgres@postgres:5432/aksara}
      VECTOR_DIM: ${VECTOR_DIM:-1536}
      GEMINI_API_KEY: ${GEMINI_API_KEY:-changeme}
      GEMINI_MODEL_QA: ${GEMINI_MODEL_QA:-gemini-2.5-pro}
      GEMINI_MODEL_EMBED: ${GEMINI_MODEL_EMBED:-text-embedding-004}
      STORAGE_BUCKET_URL: ${STORAGE_BUCKET_URL:-http://minio:9000/aksara}
      STORAGE_SIGNING_KEY: ${STORAGE_SIGNING_KEY:-local-signing}
      ENABLE_PDF_EXPORT: ${ENABLE_PDF_EXPORT:-false}
      RETRIEVAL_TOPK: ${RETRIEVAL_TOPK:-24}
      RERANK_TOPK: ${RERANK_TOPK:-8}
      JWT_ISSUER: ${JWT_ISSUER:-https://auth.aksara.id/}
      JWT_AUDIENCE: ${JWT_AUDIENCE:-aksara-legal-ai}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY:-dummy-public-key}
    ports:
      - "7700:7700"

  frontend:
    build: ./frontend
    depends_on:
      backend:
        condition: service_started
      ai-service:
        condition: service_started
    environment:
      PORT: 7500
      NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL:-http://backend:3000}
      NEXT_PUBLIC_AI_SERVICE_URL: ${NEXT_PUBLIC_AI_SERVICE_URL:-http://ai-service:7700}
      NEXT_PUBLIC_AI_SERVICE_TOKEN: ${NEXT_PUBLIC_AI_SERVICE_TOKEN:-}
      NEXT_PUBLIC_MOCK_USER_ID: ${NEXT_PUBLIC_MOCK_USER_ID:-demo-user}
    ports:
      - "7500:7500"

volumes:
  postgres_data:
  minio_data:
